- fail:
    msg: "Only Ubuntu and Debian are supported"
  when: ansible_distribution not in ["Ubuntu","Debian"]
  tags:
  - always

- name: "Install dependencies"
  become: yes
  apt:
    pkg:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg-agent
    - software-properties-common
    update_cache: yes

- name: "Install GPG key"
  become: yes
  apt_key:
    # https://download.docker.com/linux/ubuntu/gpg
    url: "https://download.docker.com/linux/{{ansible_distribution|lower}}/gpg"
    state: present

- name: "Install apt repository"
  become: yes
  apt_repository:
    # deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable
    repo: "deb https://download.docker.com/linux/{{ansible_distribution|lower}} {{ansible_distribution_release}} stable"
    state: present
    filename: docker

- name: "Install docker"
  become: yes
  apt:
    pkg:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    update_cache: yes

- block:
  - name: Get latest version of docker-compose
    uri:
      url: https://api.github.com/repos/docker/compose/releases/latest
    delegate_to: localhost
    register: docker_compose_releases
  - set_fact:
      docker_compose_version: "{{docker_compose_releases.json.tag_name}}"
  when: docker_compose_version=="latest"

- name: "Get docker-compose v{{ docker_compose_version }} checksum"
  uri:
    url: https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ ansible_system }}-{{ ansible_architecture }}.sha256
    return_content: yes
  register: docker_compose_checksum

- name: "Install docker-compose v{{ docker_compose_version }}"
  become: yes
  get_url:
    url: https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ ansible_system }}-{{ ansible_architecture }}
    dest: /usr/local/bin/docker-compose
    mode: '0755'
    owner: root
    group: root
    checksum: 'sha256:{{ docker_compose_checksum.content.split(" ")[0] }}'
